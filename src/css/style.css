:root {
  /**
   * Sizes
   *
   * TODO: Simplify things... do you really need `size` and `gap` properties?
   */
  --size-05: 0.5rem;
  --size-0: 1rem; /* 16px */
  --size-1: 1.25rem; /* 20px */
  --size-2: 1.375rem; /* 22px */
  --size-3: 1.5rem; /* 24px */
  --size-4: 2rem; /* 32px */
  --size-5: 3rem; /* 48px */
  --space-block: var(--size-05);
  --space-inline: 0.75rem;
  --gap: var(--size-4); /* 2rem = 32px */
  --gap-2: calc(var(--gap) * 1.5); /* 4rem = 64px */
  --gap-4: calc(var(--gap) * 2); /* 8rem = 128px */
  --text-measure: 40rem; /* 640px */
  --linear-measure: var(--text-measure); /* 40rem = 640px @ 16px base */
  --container-max-width: 80rem; /* 1280px */
  --font-size-small: var(--size-0);
  --font-size-body: var(--size-1);
  --font-size-title: var(--size-4);

  /**
   * Colors
   */
  --text-muted: rgba(0, 0, 0, 0.65);
  --gray-light: rgba(0, 0, 0, 0.25);

  /**
   * Fonts
   */
  --font-sans: "Infini", "Lato", serif, -apple-system, "BlinkMacSystemFont", "Segoe UI", "Roboto", "Helvetica Neue", "Arial", sans-serif;

  /* https://qwtel.com/posts/software/the-monospaced-system-ui-css-font-stack/ */
  --font-mono: "Fira Code", ui-monospace, "Menlo", "Monaco", "Cascadia Mono", "Segoe UI Mono", "Roboto Mono", "Oxygen Mono", "Ubuntu Monospace", "Source Code Pro", "Fira Mono", "Droid Sans Mono", "Courier New", monospace;
}

@media (min-width: 800px) {
  :root {
    --gap: var(--size-4); /* 2rem = 32px */
    --gap-2: calc(var(--gap) * 2); /* 4rem = 64px */
    --gap-4: calc(var(--gap) * 4); /* 8rem = 128px */
    --font-size-small: var(--size-1);
    --font-size-body: var(--size-2);
    --font-size-title: var(--size-5);
  }
}

@media (min-width: 1600px) {
  :root {
    /* --size-05: 0.5rem; */
    --size-05: 1rem; /* 16px */
    --size-0: 1.25rem; /* 20px */
    --size-1: 1.5rem; /* 24px */
    --size-3: 2rem; /* 32px */
    --size-4: 3rem; /* 48px */
    --size-5: 5rem; /* 80px */
    --space-block: var(--size-05);
    --space-inline: 0.75rem;
    --gap: var(--size-4); /* 3rem = 48px */
    --gap-2: calc(var(--gap) * 2); /* 6rem = 96px */
    --gap-4: calc(var(--gap) * 4); /* 12rem = 192px */
    --text-measure: 45rem; /* 720px */
    --linear-measure: var(--text-measure); /* 45rem = 720px @ 16px base */
    --container-max-width: 90rem; /* 1440px */
  }
}

/* Fonts
   ========================================================================== */

@font-face {
  font-family: 'Infini';
  src: url('../fonts/infini/infini-regular.eot');
  src: url('../fonts/infini/infini-regular.eot?#iefix') format('embedded-opentype'), url('../fonts/infini/infini-regular.woff') format('woff'), url('wo../fonts/infini/infini-regular.woff2') format('woff2'), url('../fonts/infini/infini-regular.ttf') format('truetype'), url('../fonts/infini/infini-regular.svg#svgFontName') format('svg');
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}

@font-face {
  font-family: 'Infini';
  src: url('../fonts/infini/infini-bold.eot');
  src: url('../fonts/infini/infini-bold.eot?#iefix') format('embedded-opentype'), url('../fonts/infini/infini-bold.woff') format('woff'), url('../fonts/infini/infini-bold.woff2') format('woff2'), url('../fonts/infini/infini-bold.ttf') format('truetype'), url('../fonts/infini/infini-bold.svg#svgFontName') format('svg');
  font-weight: bold;
  font-style: normal;
  font-display: swap;
}

@font-face {
  font-family: 'Infini';
  src: url('../fonts/infini/infini-italic.eot');
  src: url('../fonts/infini/infini-italic.eot?#iefix') format('embedded-opentype'), url('../fonts/infini/infini-italic.woff') format('woff'), url('../fonts/infini/infini-italic.woff2') format('woff2'), url('../fonts/infini/infini-italic.ttf') format('truetype'), url('../fonts/infini/infini-italic.svg#svgFontName') format('svg');
  font-weight: normal;
  font-style: italic;
  font-display: swap;
}

/* Reset
   ========================================================================== */

html {
  box-sizing: border-box;
}

*,
*::before,
*::after {
  box-sizing: inherit;
}

html:focus-within {
  scroll-behavior: smooth;
}

body,
h1,
h2,
h3,
h4,
p,
figure,
blockquote,
dl,
dd,
ol,
ul {
  margin: 0;
}

picture,
img {
  display: block;
  max-width: 100%;
}

img {
  height: auto;
}

/* Overriding Prism.js */
code,
pre {
  font-family: var(--font-mono) !important;
  font-size: var(--size-1) !important;
}

pre {
  /* margin-inline: calc(var(--gap) * -1) !important; */
  margin-inline: -1em !important;
  overflow-x: auto;
}

@media (prefers-reduced-motion: reduce) {
  html:focus-within {
    scroll-behavior: auto;
  }

  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

/* Base
   ========================================================================== */

:focus {
  outline: 2px dashed;
}

/* ::selection {
  color: #fff;
  background: rgba(0, 0, 0, 0.99);
} */

body {
  background-color: var(--bg-color);
  color: var(--text-color);
  font-family: var(--font-sans);
  font-size: var(--font-size-body);
  line-height: 1.6;
}

h1 {
  font-weight: normal;
}

h2 {
  line-height: inherit;
  font-size: inherit;
  font-weight: bold;
}

a {
  color: currentColor;
  text-decoration-skip-ink: auto;
}

a[aria-current],
a.active {
  font-weight: bold;
}

a:hover {
  text-decoration: none;
}

ol li::marker {
  color: var(--text-muted);
}

ul li {
  list-style-type: var(--list-marker-content, "– ");
}

ul li::marker {
  color: var(--gray-light);
  content: var(--list-marker-content, "– ");
}

blockquote {
  border-inline-start: 4px solid var(--gray-light);
  margin-inline-start: var(--size-0);
  padding-inline-start: var(--size-0);
}

hr {
  width: 100%;
  border: none;
  height: 2px;
  background-color: var(--gray-light);
  margin-inline-start: 0;
  margin-inline-end: 0;
}

/* Layouts
   ========================================================================== */

@media (min-width: 700px) {
  .GridAlt {
    column-gap: var(--gap);
    display: grid;
    gap: var(--gap-4) var(--gap);
    grid-template-columns: 1fr 2fr;
  }

  .GridAlt > section:nth-child(odd) {
    grid-column: 1;
  }

  .GridAlt > section:nth-child(even) {
    grid-column: 2;
  }
}

.PageGrid {
  margin-inline-start: auto;
  margin-inline-end: auto;
  padding: var(--gap);
  display: grid;

  /* Content = 100% until screen is px wide, then max at 80vw */
  grid-template-columns:
    [content-start] minmax(0, var(--text-measure))
    [measure] 1fr
    [content-end];

  /* Overall maximum width */
  max-width: var(--container-max-width); /* 80rem = 1280px @ 16px base */
}

.PageGrid > * {
  grid-column: content;
}

.PageHeader__navList {
  display: flex;
  flex-wrap: wrap;
}

.PageHeader__navListItem:first-of-type::after {
  content: "/";
  color: var(--gray-light);
  padding-inline-start: calc(var(--space-inline));
  padding-inline-end: calc(var(--space-inline));
}

/* Padding on every item except for last */
.PageHeader__navListItem:not(:last-of-type) {
  padding-inline-end: var(--size-3);
}

.PageHeader__navListItem:first-of-type {
  font-weight: bold;
  padding-inline-start: 0;
  padding-inline-end: 0;
}

/**
 * TODO: Make this not need a media query
 */
@media (min-width: 600px) {
  .PageHeader__navList {
    justify-content: flex-end;
  }

  .PageHeader__navListItem:first-of-type {
    margin-inline-end: auto;
    padding-block-end: 0;
  }

  .PageHeader__navListItem:first-of-type::after {
    content: none;
  }
}

.SkipNav {
  text-decoration: underline;
}

.SkipNav:hover {
  text-decoration: none;
}

.SkipNav::after {
  content: " ↷";
}

.Articles__list > * + * {
  margin-block-start: var(--gap-4);
}

.Article__header > * + * {
  margin-block-start: var(--size-1);
}

.Article__title {
  font-feature-settings: "case" on;
  font-size: var(--font-size-title);
  hanging-punctuation: first;
  line-height: 1.2;
}

.Article__title > a {
  text-decoration: none;
}

.Article__meta {
  display: flex;
  flex-wrap: wrap;
  color: var(--text-muted);
  font-size: var(--size-0);
  font-size: var(--font-size-small);
  font-variant-numeric: lining-nums;
}

.Article__title + .Article__meta {
  margin-block-start: var(--size-05);
}

/* If meta label is not `visually-hidden`, we need a space after it */
.Article__meta dt:not([class="visually-hidden"])::after {
  content: "\00a0";
}

.Article__meta dd:not(:last-of-type)::after {
  content: "/";
  color: var(--gray-light);
  padding-inline-start: calc(var(--space-inline) / 2);
  padding-inline-end: calc(var(--space-inline) / 2);
}

.Prose {
  hanging-punctuation: first;
  hyphens: auto;
  line-height: inherit;
  word-break: break-word;
}

.Prose--contain > * {
  max-width: var(--linear-measure);
}

.Prose > * + * {
  margin-block-start: var(--size-1);
}

.Prose > h2,
.Prose > h3 {
  hanging-punctuation: first;
}

.Prose > h2 {
  margin-block-start: var(--size-5);
}

.Prose ol,
.Prose ul {
  padding-inline-start: 1em;
}

.Prose li:not(:first-child),
.Prose li > ul,
.Prose li > ol {
  margin-block-start: var(--size-05);
}

.Prose li > * + * {
  margin-block-start: var(--size-05);
}

/* Extra block margin on these elems */
.Prose > blockquote,
.Prose > figure,
.Prose > hr,
.Prose > blockquote + *,
.Prose > hr + *,
.Prose > figure + * {
  margin-block-start: var(--size-5);
}

/* Overriding Prism.js */
.Prose > pre,
.Prose > pre + * {
  margin-block-start: var(--size-5) !important;
}

/* Reset block margin on floated figs */
.Prose > .align-pull-end,
.Prose > .align-pull-end + *,
.Prose > .align-pull-start,
.Prose > .align-pull-start + * {
  margin-block-start: var(--size-2);
}

.Prose > figure + .Article__footer {
  margin-block-start: var(--size-2);
}

.Prose [class^="align-"] figcaption {
  color: var(--text-muted);
  font-size: var(--font-size-small);
  line-height: 1.5;
  margin-block-start: var(--size-0);
}

/* TODO: Do we need a flow util on `figcaption`, in case of multi paras? */

/* TODO: Implement multi image rows */

/* Avoid margin staggering on side-by-side photos */
/* .Prose img {
  margin-block-start: 0;
} */

.Prose > .align-full-bleed {
  /* Unset this width limitation from .Prose */
  --linear-measure: auto;
  display: grid;
  grid-template-columns:
    /* Add padding gap to align end right w/ .Prose text */
    [bleed-start] minmax(0, calc(var(--text-measure) + var(--gap)))
    [measure] 1fr
    [bleed-end];
  margin-inline-start: calc(var(--gap) * -1);
  margin-inline-end: calc(var(--gap) * -1);
}

.Prose > .align-full-bleed > :first-child {
  grid-column: bleed;
}

.Prose > .align-full-bleed > figcaption {
  /* Add side padding to offset being full-width */
  padding-inline-start: var(--gap);
  padding-inline-end: var(--gap);
}

/* Screen at least 440px */
@media (min-width: 27.5em) {
  .Prose > .align-end,
  .Prose > .align-pull-end {
    float: inline-end;
    margin-inline-start: var(--gap);
    /* width: 33%; */
    /* Set minimum width of 250px */
    width: max(250px, 33%);
  }

  .Prose > .align-pull-end {
    margin-inline-end: calc(var(--gap) * -1);
  }

  .Prose > .align-start,
  .Prose > .align-pull-start {
    float: inline-start;
    margin-inline-end: var(--gap);
    /* Set minimum width of 250px */
    width: max(250px, 33%);
  }

  /* Pull figure into page gutter padding area */
  .Prose > .align-pull-start {
    margin-inline-start: calc(var(--gap) * -1);
  }
}

.Prose > .photo-row {
  display: grid;
  gap: var(--space-inline);
  /* Get --columns property from HTML to decide how many to display */
  grid-template-columns: repeat(var(--columns, 2), 1fr);
}

/* Specific pages
  ========================================================================== */

/* Extra margin on first element following header on single article pages */
.Page--article .Article__header + * {
  margin-block-start: var(--gap-2);
}

.Page--now figure:first-of-type {
  shape-outside: polygon(13.87% 1.9%, 36.42% -0.12%, 51.4% 4.48%, 54.75% 18.87%, 56.48% 30.92%, 63.49% 35.99%, 75.58% 39.88%, 83.53% 48.24%, 88.44% 68.12%, 81.66% 83.25%, 70.37% 100.23%, 42.47% 102.61%, 21% 74.49%, 36px 66.87%, 8.6% 54%, -0.89% 28.81%);
  margin-block-start: -0.5em;
  padding-inline-end: var(--size-4);
}

.MusicGrid {
  margin-block-start: 1em;
}

@media (min-width: 600px) {
  .MusicGrid {
    display: grid;
    grid-template-columns: 1fr 1fr;
  }
}

/* Reading/Books
   ========================================================================== */

.Page--readingList h2 {
  font-variant-numeric: lining-nums;
}

/* Infini doesn't have bold italic, and we don't want some faux nonsense */
.Page--readingNotes h2 {
  font-weight: normal;
  margin-block-start: var(--size-0);
}

.Page--reading .GridAlt {
  margin-block-start: var(--gap-4);
}

.Page--readingNotes .GridAlt > :first-child {
  max-width: 250px;
}

.Page--reading .GridAlt > h2:not(:first-child) {
  margin-block-start: var(--size-5);
}

.Page--reading .GridAlt > ul {
  margin-block-start: 1em;
}

@media (min-width: 700px) {
  .Page--readingNotes h2 {
    margin-block-start: var(--size-4);
  }

  .GridAlt--reading h2:not(:first-child),
  .GridAlt--reading ul {
    margin-block-start: 0;
  }

  /* .Page--reading .GridAlt > :first-child {
    max-width: 100%;
  } */
}

.BooksSubmenu {
  align-items: baseline;
  display: flex;
  flex-wrap: wrap;
}

.BooksSubmenu li:not(:last-of-type):not(:first-of-type)::after {
  content: "/";
  color: var(--gray-light);
  padding-inline-start: calc(var(--space-inline) / 2);
  padding-inline-end: calc(var(--space-inline) / 2);
}

.BooksSubmenu li:first-of-type {
  padding-inline-end: calc(var(--space-inline) / 2);
}

.Book {
  padding-inline-end: var(--size-0);
}
