<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>PRL/Chimero grid</title>
  <style>
    :root {
      /**
       * Sizes
       */
      --text-measure: 40rem; /* 640px */
      --container-max-width: 80rem; /* 1280px */
      --size-05: 0.5rem;
      --size-0: 1rem; /* 16px */
      --size-1: 1.25rem; /* 20px */
      --size-2: 1.5rem; /* 24px */
      --size-3: 2rem; /* 32px */
      --size-5: 3rem; /* 48px */
      --gap: var(--size-3);
      --space-block: 0.5rem;
      --space-inline: 0.75rem;
      --linear-measure: var(--text-measure); /* 42.5rem = 680px @ 16px base */

      /**
       * Colors
       */
      --text-muted: rgba(0,0,0,0.65);
      --gray-light: rgba(0,0,0,0.25);
    }

    html { box-sizing: border-box; }
    *,
    *::before,
    *::after {
      box-sizing: inherit;
    }
    html {
      font-family: -apple-system, system-ui;
    }
    body,
    h1,
    h2,
    h3,
    h4,
    p,
    figure,
    blockquote,
    dl,
    dd {
      margin: 0;
    }
    ul, ol { margin-block-end: 0; }
    picture, img {
      display: block;
      max-width: 100%;
    }
    img {
      height: auto;
    }

    .Wide {
      --linear-measure: auto;
      display: grid;
      grid-template-columns:
        [bleed-start] minmax(0, var(--text-measure))
        [measure] 1fr
        [bleed-end];
      margin-inline: calc(var(--gap) * -1);
      border: 1px solid salmon;
    }
    .Flip {
      /* Unset this width limitation from .Prose */
      --linear-measure: auto;
      display: grid;
      grid-template-columns:
        [bleed-start] 1fr
        [measure] minmax(0, var(--text-measure))
        [bleed-end];
      /* margin-inline: calc(var(--gap) * -1); */
    }
    .Flip > * {
      grid-column: measure;
    }
    .AboutGrid {
      --linear-measure: auto;
      display: grid;
      grid-template-columns: 1fr 2fr;
      grid-gap: var(--gap);
    }







    .PageGrid__container {
      max-width: var(--container-max-width); /* 80rem = 1280px @ 16px base */
      margin-inline: auto;
      padding-inline: var(--gap);
    }
    .PageGrid {
      display: grid;
      /* Basically: 100% until screen width=800px, then 80vw */
      grid-template-columns: [content] minmax(min(100%, 800px), 80vw);
      /* But... still kinda weird to have two separate max-widths... */
      grid-template-columns:
        [content-start] minmax(0, var(--text-measure))
        [measure] 1fr
        [content-end];
      /* container-max-width: 80rem */
    }
    .PageGrid > * {
      grid-column: content;
    }
    /* .PageGrid > * + * {
      margin-block-start: calc(var(--gap) * 4);
    } */

    .Article__meta {
      --flow-space: 0.25em;
      align-items: baseline;
      display: flex;
      flex-wrap: wrap;
      color: var(--text-muted);
      font-size: var(--size-0);
      font-variant: tabular-nums;
    }
    .Article__meta dd:not(:last-of-type)::after {
      content: "/";
      color: var(--gray-light);
      /* display: inline; */
      padding-inline: calc(var(--space-inline) / 2);
    }
    .Article__title {
      font-feature-settings: "ss02" 1, "case" 1;
      font-size: var(--size-5);
      hanging-punctuation: first;
      line-height: 1.1;
    }
    .Article__meta + .Article__title {
      margin-block-start: var(--size-0);
    }
    .Article__summary {
      color: var(--text-muted);
      font-size: var(--size-2);
      hanging-punctuation: first;
      line-height: 1.4;
    }
    .Article__summary + * {
      /* TODO: Not !important ! */
      margin-block-start: calc(var(--gap) * 4) !important;
    }

    .Prose {
      --flow-space: 1em;
      --list-display: list-item;
      font-size: var(--size-1);
      /* font-variant: oldstyle-nums; */
      hanging-punctuation: first;
      hyphens: auto;
      line-height: 1.5;
    }
    .Prose--contain > * {
      max-width: var(--linear-measure);
    }
    .Prose > * {
      word-break: break-word;
    }
    .Prose * + * {
      margin-block-start: var(--flow-space);
    }
    .Prose h2,
    .Prose h3 {
      hanging-punctuation: first;
    }
    .Prose h2 {
      --flow-space: 2em;
      /* line-height: 1.3; */
      font-size: inherit;
    }
    /* Add extra top margin to a figure following anything else */
    .Prose *:not(h2) + figure {
      /* margin-top: var(--gap); */
      margin-block-start: calc(var(--flow-space) * 2);
    }
    /* ...and to the item after a figure */
    .Prose figure + *:not(h2) {
      /* margin-top: var(--gap); */
      margin-block-start: calc(var(--flow-space) * 2);
    }
    .Prose .align-pull-end,
    .Prose .align-pull-start {
      /* Less margin to make it align with text. */
      margin-top: var(--flow-space);
    }
    /* Remove top margin from heading next to floated fig */
    .Prose .align-end + h2,
    .Prose .align-start + h2,
    .Prose .align-pull-end + h2,
    .Prose .align-pull-start + h2 {
      margin-top: 0;
    }
    /* Reset extra margin after floated figures */
    .Prose .align-end + *,
    .Prose .align-start + *,
    .Prose .align-pull-end + *,
    .Prose .align-pull-start + * {
      margin-top: var(--flow-space);
    }
    .Prose figcaption {
      /* Below two lines only needed if more than one `p` in caption, I'm guessing? */
      /* --flow-space: 0.5em; */
      /* padding-top: var(--space-block); */
      color: var(--text-muted);
      font-size: var(--size-0);
      font-variant: tabular-nums;
    }
    /* and other selectors */
    /* .Prose figure:not(:last-child) {
      margin-bottom: var(--gap);
    } */
    /* Avoid margin staggering on side-by-side photos */
    .Prose img {
      margin-top: 0;
    }

    /* Limit width of regular figures to text width */
    /* .align-none {
      max-width: var(--text-measure);
    } */
    .align-bleed {
      /* Unset this width limitation from .Prose */
      --linear-measure: auto;
      display: grid;
      grid-template-columns:
        /* Add padding gap to align end right w/ .Prose text */
        [bleed-start] minmax(0, calc(var(--text-measure) + var(--gap)))
        [measure] 1fr
        [bleed-end];
      margin-inline: calc(var(--gap) * -1);
    }
    .align-bleed > :first-child {
      grid-column: bleed;
    }
    .align-bleed > figcaption {
      /* Add side padding to offset being full-width */
      padding-inline: var(--gap);
    }
    /* Screen at least 440px */
    @media (min-width: 27.5em) {
      .align-end,
      .align-pull-end {
        float: right;
        margin-inline-start: var(--gap);
        width: 33%;
        /* Set minimum width of 200px */
        width: max(200px, 33%);
      }
      .align-pull-end {
        margin-inline-end: calc(var(--gap) * -1);
      }
      .align-start,
      .align-pull-start {
        float: left;
        margin-inline-end: var(--gap);
        /* Set minimum width of 200px */
        width: max(200px, 33%);
      }
      .align-pull-start {
        margin-inline-start: calc(var(--gap) * -1);
      }
    }
    .photo-row {
      display: grid;
      gap: var(--space-inline);
      /* Get --columns property from HTML to decide how many to display */
      grid-template-columns: repeat(var(--columns, 2), 1fr);
    }
    .flow > * + * {
      /* margin-block-start: calc(var(--gap) * 2); */
      margin-block-start: var(--flow-space, 1em);
    }
    .visually-hidden {
      clip: rect(0 0 0 0);
      border: 0;
      height: 1px;
      margin: -1px;
      overflow: hidden;
      padding: 0;
      position: absolute;
      width: 1px;
    }

    .BooksGrid {
      display: grid;
      grid-template-columns: 1fr 2fr;
      gap: calc(var(--gap) * 2) var(--gap);
    }
    .BooksGrid > h2 {
      grid-column: 1;
      margin-block-start: 0;
    }
    .BooksGrid > ul {
      grid-column: 2;
      margin-block-start: 0;
      padding-inline-start: var(--size-2);
    }
  </style>
</head>
<body class="flow">

  <style>
  {# .Page__container {
    display: grid;
    grid-template-columns: [content] minmax(min(100%, 800px), 80vw);
  } #}
  .Page__container {
    margin-inline: auto;
    padding-top: var(--gap);
    padding-bottom: calc(var(--gap) * 2);
    padding-inline: var(--gap);
    display: grid;
    /* Content: 100% until screen is px wide, then max at 80vw */
    grid-template-columns:
      [content-start] minmax(0, var(--text-measure))
      [measure] 1fr
      [content-end];
    /* Overall maximum width */
    max-width: var(--container-max-width); /* 80rem = 1280px @ 16px base */
  }
  .Page__container > * {
    grid-column: content;
  }
  </style>
  <div class="Page__container">
    <article class="Prose">
      <div class="BooksGrid">
        {# {% include "snippets/books-reading-list.njk" %} #}
        {% for book in collections.booksReading %}
          {% set bookSlug = book.c[1].v %}
          {% set bookTitle = book.c[2].v %}
          {% set bookAuthor = book.c[3].v %}
          {% set bookGenre = book.c[4].v %}
          {% set bookYear = book.c[5].v %}
          {% set bookStartDate = book.c[6].f %}
          {% set bookFinishDate = book.c[7].f %}
          {% set bookFinishYear = book.c[8].v %}
          {% set bookMedia = book.c[9].v %}
          {% set bookWidth = book.c[10].v %}
          {% set bookHeight = book.c[11].v %}
          {% set hasDrawing = book.c[12].f %}
          {% set bookVia = book.c[13].v %}
          {% set bookDesc = book.c[14].v %}
          {% if loop.first %}
            <h2>What I'm currently reading</h2>
            <ul class="flow" style="--flow-space: var(--size-05);">
          {% endif %}
          <li><i>{{ bookTitle }}</i> by {{ bookAuthor | formatAuthor }}</li>
          {% if loop.last %}</ul>{% endif %}
        {% endfor %}
      </div>
    </article>
  </div>

  <div class="PageGrid__container">
    <article class="Article PageGrid Prose">
      <div class="BooksGrid">

        {# {% include "snippets/books-reading-list.njk" %} #}
        {% for book in collections.booksReading %}
          {% set bookSlug = book.c[1].v %}
          {% set bookTitle = book.c[2].v %}
          {% set bookAuthor = book.c[3].v %}
          {% set bookGenre = book.c[4].v %}
          {% set bookYear = book.c[5].v %}
          {% set bookStartDate = book.c[6].f %}
          {% set bookFinishDate = book.c[7].f %}
          {% set bookFinishYear = book.c[8].v %}
          {% set bookMedia = book.c[9].v %}
          {% set bookWidth = book.c[10].v %}
          {% set bookHeight = book.c[11].v %}
          {% set hasDrawing = book.c[12].f %}
          {% set bookVia = book.c[13].v %}
          {% set bookDesc = book.c[14].v %}

          {% if loop.first %}
            <h2>What I'm currently reading</h2>
            <ul class="flow" style="--flow-space: var(--size-05);">
          {% endif %}
          <li><i>{{ bookTitle }}</i> by {{ bookAuthor | formatAuthor }}</li>
          {% if loop.last %}</ul>{% endif %}
        {% endfor %}

        {% set currentYear = "" %}
        {% for book in collections.booksRead %}
          {% set bookSlug = book.c[1].v %}
          {% set bookTitle = book.c[2].v %}
          {% set bookAuthor = book.c[3].v %}
          {% set bookGenre = book.c[4].v %}
          {% set bookYear = book.c[5].v %}
          {% set bookStartDate = book.c[6].f %}
          {% set bookFinishDate = book.c[7].f %}
          {% set bookFinishYear = book.c[8].v %}
          {% set bookMedia = book.c[9].v %}
          {% set bookWidth = book.c[10].v %}
          {% set bookHeight = book.c[11].v %}
          {% set hasDrawing = book.c[12].f %}
          {% set bookVia = book.c[13].v %}
          {% set bookDesc = book.c[14].v %}

          {% if currentYear != bookFinishYear %}
            {% set currentYear = bookFinishYear %}
            {% if loop.first %}{% else %}</ul>{% endif %}
            <h2>{{ bookFinishYear }}</h2>
            <ul class="flow" style="--flow-space: var(--size-05);">
          {% endif %}
          <li><i>{{ bookTitle }}</i> by {{ bookAuthor | formatAuthor }}</li>
          {% if loop.last %}</ul>{% endif %}
        {% endfor %}

      </div>
    </article>
  </div>

  <hr>

  <div class="PageGrid__container">
    <article class="Article PageGrid Prose">
      <div class="Prose--contain" style="--linear-measure: calc(var(--text-measure) + 20%);">
        <figure class="align-start" style="shape-outside: polygon(13.87% 1.9%, 36.42% -0.12%, 54.4% 4.32%, 61.67% 20.64%, 62.48% 33.27%, 80.57% 38.79%, 96.81% 51.68%, 101.3% 69.24%, 86.82% 96.18%, 56.27% 100.91%, 46.6% 86.5%, 45.7% 76.51%, 21% 74.49%, 36px 66.87%, 8.6% 54%, -0.89% 28.81%); margin-top: -0.5em;">
          <img src="../../images/self-portrait-fast-ink.jpg" alt="">
        </figure>
        <h2>About Me</h2>
        <p>Lorem, ipsum dolor sit amet consectetur adip<span style="color:red;">*</span>isicing elit. Quam suscipit nu<span style="color:red;">*</span>lla nesciunt sint vero, accusantium error ea quidem inventore nihil numquam quos cumque, earum corporis soluta. Possimus facere placeat quaerat. Lorem ipsum dolor sit amet consectetur adipisicing elit. Architecto odio corrupti consequatur est ratione qui alias maiores, eos accusantium repellat? Eius, commodi iusto? Numquam, at aperiam! Dicta voluptatem dolorem dolorum.</p>
      </div>
      <!-- .Prose--contain -->
    </article>
  </div>

  <hr>

  <main class="PageGrid__container">
    <article class="Article PageGrid Prose">
      <dl class="Article__meta">
        <dt class="visually-hidden">Published on</dt><dd><time datetime="2021-08-24T13:00:00.000Z">August 24, 2021</time></dd><dt class="visually-hidden">Published in</dt><dd>Asheville, North Carolina, USA</dd>
      </dl>
      <h1 class="Article__title">“2020 in Review”</h1>
      <div class="Article__summary">
        <p>Lorem ipsum, dolor sit amet consectetur adipisicing elit. Omnis totam ad nisi neque dolore, libero quod beatae et! Molestiae quos, ea numquam autem placeat commodi omnis nihil ratione vero. Ex!</p>
      </div>
      <div class="Prose--contain">
        <p>Lorem, ipsum dolor sit amet consectetur adipisicing elit. Atque incidunt repellendus tempore optio quos vitae, dignissimos voluptatum, nihil, eos odit dolore ea praesentium odio numquam? Ea, corrupti tempora. Illum, architecto.</p>
        <h2>This is the prose contained section</h2>
        <p>Lorem, ipsum dolor sit amet consectetur adip<span style="color:red;">*</span>isicing elit. Quam suscipit nu<span style="color:red;">*</span>lla nesciunt sint vero, accusantium error ea quidem inventore nihil numquam quos cumque, earum corporis soluta.</p>
        <figure class="align-bleed">
          <img src="https://dummyimage.com/1986x658/666/fff" width="1986" height="658" alt="">
          <figcaption>
            <p>This one is full-bleed</p>
          </figcaption>
        </figure>
        <p>Possimus facere placeat quaerat. Lorem ipsum dolor sit amet consectetur adipisicing elit. Architecto odio corrupti consequatur est ratione qui alias maiores, eos accusantium repellat? Eius, commodi iusto? Numquam, at aperiam! Dicta voluptatem dolorem dolorum.</p>
        <figure class="align-pull-end">
          <img src="https://dummyimage.com/460x400/666/fff" width="460" height="400" alt="">
          <figcaption>
            <p>This one is pulled to the right on wider screens.</p>
          </figcaption>
        </figure>
        <p>Lorem ipsum dolor, sit amet consectetur adipisicing elit. Voluptate, harum magnam! Ipsam, maiores earum nulla quibusdam numquam corporis porro alias dolorum sint ut, non doloribus eaque illum? Esse, fugit incidunt.</p>
        <p>Lorem ipsum dolor sit amet consectetur, adipisicing elit. Eaque nisi, laudantium illo quae esse a laborum error explicabo dolor dicta corrupti animi voluptate ipsam rem est quis neque ad perferendis.</p>
        <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Accusamus laborum voluptatem labore beatae ducimus enim doloremque ratione natus veritatis laboriosam, quasi eligendi asperiores illum ipsum! Excepturi doloremque maxime assumenda officia. Lorem ipsum dolor sit amet consectetur adipisicing elit. Commodi, vero sed fugit, sint voluptatum magni, perspiciatis nesciunt sapiente ipsam exercitationem dicta similique necessitatibus quod nulla laborum sunt ipsa? Unde, porro?</p>
        <figure class="align-bleed">
          <div class="photo-row" style="--columns: 2;">
            <img src="https://dummyimage.com/700x385/666/fff" alt="">
            <img src="https://dummyimage.com/700x385/666/fff" alt="">
          </div>
          <figcaption>
            <p>Two photos side-by-side; change custom property on parent `figure` to add more... I'm assuming this will work with different-height photos as well.</p>
          </figcaption>
        </figure>
        <p>Lorem, ipsum dolor sit amet consectetur adipisicing elit. Nihil repudiandae eos omnis nam animi fuga perspiciatis unde dolorum molestias magnam eligendi, nobis veritatis ad aut officia dolore cum. Commodi, repellat.</p>
        <figure>
          <div class="photo-row" style="--columns: 2;">
            <img src="https://dummyimage.com/587x385/666/fff" alt="">
            <img src="https://dummyimage.com/587x385/666/fff" alt="">
          </div>
          <figcaption>
            <p>Remove class from containing `figure` element to let this just be regular text width. If you have a couple images that can be pretty darn small.</p>
          </figcaption>
        </figure>
        <figure class="align-none">
          <img src="https://dummyimage.com/986x740/666/fff" alt="">
          <figcaption>
            <p>This one is the same width as the text.</p>
          </figcaption>
        </figure>
      </div>
      <!-- .Prose--contain -->
    </article>
  </main>
</body>
</html>
